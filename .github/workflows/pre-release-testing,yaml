name: pre-release testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  ruff-lint:
    runs-on: ubuntu-latest
    name: Ruff Linter
    steps:
      - uses: actions/checkout@v4
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pdm sync -d
          pdm add --dev ruff
      - name: Run Ruff
        run: |
          pdm run ruff check .

  black-format:
    runs-on: ubuntu-latest
    name: Black Formatter Check
    steps:
      - uses: actions/checkout@v4
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pdm sync -d
          pdm add --dev black
      - name: Run Black (Check Only)
        run: |
          pdm run black --check .

  testing:
    name: Test
    needs: [ruff-lint, black-format]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libvips42 libopenslide0
      - name: Run Tests
        run: |
          pdm test
        continue-on-error: true # Temporary during deploy

  coverage:
    needs: testing
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: '3.12'
      - name: Install system dependencies (Ubuntu)
        run: |
          sudo apt-get update
          sudo apt-get install -y libvips42 libopenslide0
      - name: Install dependencies
        run: |
          pdm sync -d
      - name: Generate coverage
        run: |
          pdm cov_report
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true
